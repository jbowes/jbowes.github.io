<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on repl.ca</title>
    <link>http://jbowes.github.io/tags/python/</link>
    <description>Recent content in Python on repl.ca</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2005 - 2016 James Bowes</copyright>
    <lastBuildDate>Mon, 27 Aug 2007 08:34:00 -0300</lastBuildDate>
    <atom:link href="http://jbowes.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Python Holy Grail</title>
      <link>http://jbowes.github.io/2007/08/27/python-holy-grail</link>
      <pubDate>Mon, 27 Aug 2007 08:34:00 -0300</pubDate>
      
      <guid>http://jbowes.github.io/2007/08/27/python-holy-grail</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://mail.python.org/pipermail/python-
checkins/2007-August/061867.html&#34;&gt;This checkin&lt;/a&gt; to &lt;a href=&#34;http://www.python.org&#34;&gt;python&lt;/a&gt; brings a
long-awaited (and sorely needed, IMO) enhancement to python: SSL certificate
verification support. Once the API support percolates up from socket through
the various network libraries in python proper, for the vast majority of
developers there will no longer be a need for
&lt;a href=&#34;http://pyopenssl.sourceforge.net/&#34;&gt;PyOpenSSL&lt;/a&gt;,
&lt;a href=&#34;http://chandlerproject.org/Projects/MeTooCrypto&#34;&gt;M2Crypto&lt;/a&gt;, or
&lt;a href=&#34;http://rhn.redhat.com&#34;&gt;rhnlib&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python Comment of the Week (Aug 12 2007)</title>
      <link>http://jbowes.github.io/2007/08/12/python-comment-of-week-aug-12-2007</link>
      <pubDate>Sun, 12 Aug 2007 11:38:00 -0300</pubDate>
      
      <guid>http://jbowes.github.io/2007/08/12/python-comment-of-week-aug-12-2007</guid>
      <description>&lt;p&gt;&lt;code&gt;# Assorted functions for various things&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Thank you, developers of yore. You&amp;rsquo;ve made things oh so much clearer to this
lowly maintenance programmer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using Hostip Berkeley DB Files From Python</title>
      <link>http://jbowes.github.io/2007/05/10/using-hostip-berkeley-db-files-from</link>
      <pubDate>Thu, 10 May 2007 09:02:00 -0300</pubDate>
      
      <guid>http://jbowes.github.io/2007/05/10/using-hostip-berkeley-db-files-from</guid>
      <description>&lt;p&gt;I needed to process some IP addresses the other day to associate them with
their originating Country. I implemented the code in &lt;a href=&#34;http://www.python.org&#34;&gt;Python
&lt;/a&gt;(as usual), and decided to try out
&lt;a href=&#34;http://www.hostip.info&#34;&gt;Hostip&lt;/a&gt; for the IP address to Country mappings.
Hostip provides freely downloadable bdb data files (along with a mysql db and
a CSV file). Using the bdb files isn&amp;rsquo;t straightforward, so here is a general
recipe for consuming them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download the bdb files from hostip. There are three files, _hip_ip4&lt;em&gt;country.db&lt;/em&gt; (maps IP to country id), _hip&lt;em&gt;countries.db&lt;/em&gt; (maps country id to country name), and _hip_ip4_city_lap&lt;em&gt;lng.db&lt;/em&gt; (maps IP to city location).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open the files with Python. They&amp;rsquo;re bdb btree format files, so I found it easiest to open them with &lt;em&gt;bsddb.btopen(FILENAME, &amp;lsquo;r&amp;rsquo;)&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Convert your IP address to the correct format. Hostip bdb entries are keyed on class C block addresses, in integer format. The following code should do it:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;def dottedQuadToNum(ip):  
&amp;quot;convert decimal dotted quad string to long integer&amp;quot;  
return struct.unpack(&#39;!L&#39;,socket.inet_aton(ip))[0]  
ip = &amp;quot;255.255.255.255&amp;quot;  
ipparts = ip.split(&#39;.&#39;)  
ipparts = ipparts[:3]  
ipparts.append(&#39;0&#39;)  
cclass = &#39;.&#39;.join(ipparts)  
intcclass = dottedQuadToNum(cclass)&lt;/code&gt;&lt;br /&gt;
&lt;em&gt;dottedQuadToNum from from
&lt;a href=&#34;http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/66517&#34;&gt;ASPN&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now, you can use the string representation of intcclass to get a country id from hip_ip4_counties.db, and use the id to get a country name from hip_countries.db&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>New hosting</title>
      <link>http://jbowes.github.io/2007/01/23/new-hosting</link>
      <pubDate>Tue, 23 Jan 2007 13:06:00 -0400</pubDate>
      
      <guid>http://jbowes.github.io/2007/01/23/new-hosting</guid>
      <description>&lt;p&gt;I’ve moved my blog and associated pages from &lt;a href=&#34;http://www.cs.dal.ca&#34;&gt;Dal CS&lt;/a&gt; to
the &lt;a href=&#34;http://www.dangerouslyinc.com&#34;&gt;dangerously incompetent&lt;/a&gt; data center.
Also, I’ve moved it from pybloxsom to &lt;a href=&#34;http://www.wordpress.org&#34;&gt;wordpress&lt;/a&gt;,
mainly because of what &lt;a href=&#34;http://www.lastblogger.com&#34;&gt;Marc&lt;/a&gt; has written about
it. So far I’m very impressed.&lt;/p&gt;

&lt;p&gt;The most difficult thing has been setting up redirects from my old cs pages to
these new ones, due to the apache configuration at Dal. I’ve had to do silly
things like making a directory called “cv.html”, and placing an index.php file
in there that will write out redirect headers. I also had to write up a quick
python cgi program that translates requests for old blog posts into redirects
to their locations on my new blog. Good times.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>